plugins {
    id 'org.springframework.boot' version '2.5.6' // 실행 가능한 jar또는 war아카이브를 패키징하고, Spring Boot 애플리케이션을 실행하고, spring-boot-dependencies에서 제공하는 종속성 관리를 사용할 수 있다.
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'	// 스프링버전에 따른 의존성을 자동으로 관리
    id 'java'	// 실행가능한 jar를 빌딩하는 테스크가 자동적으로 설정
    id "com.diffplug.eclipse.apt" version "3.26.0" // Only for Eclipse
}

apply plugin: 'io.spring.dependency-management'

group = 'arthur.kim.microservices.core'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	mapstructVersion = "1.4.0.Beta3"
}

repositories {
    mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    
    implementation project(':api')
    implementation project(':util')
    
    // mapstruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}" // if you are using mapstruct in test code
    
    // mongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    
    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'io.projectreactor:reactor-test:3.1.0.RELEASE'
}

test {
    useJUnitPlatform()
}
